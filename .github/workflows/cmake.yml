name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GCC_VERSION: 10
  CLANG_VERSION: 13

jobs:
  build:
    strategy:
      matrix:
        build-type: [Debug, Release]
        os: [macos-latest, ubuntu-latest, windows-latest]
          
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    - name: Update GCC
      if: ${{ matrix.os != 'ubuntu-latest' }}
      uses: egor-tensin/setup-gcc@v1
      with:
        version: latest
    
    - name: check gcc
      run: |
        export CXX=c++
        export CC=cc
        $CXX --version
        $CC --version
      #run: |
      #  sudo add-apt-repository ppa:ubuntu-toolchain-r/test
      #  sudo apt update
      #  sudo apt install gcc-${{ env.GCC_VERSION }} g++-${{ env.GCC_VERSION }}
      #  sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${{ env.GCC_VERSION }} 60 --slave /usr/bin/g++ g++ /usr/bin/g++-${{ env.GCC_VERSION }}
      #  export CXX="/usr/local/bin/g++-${{ env.GCC_VERSION }}"
      #  export CC="/usr/local/bin/gcc-${{ env.GCC_VERSION }}"
    
    - name: Update Clang
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew update
        brew install llvm@${{ env.CLANG_VERSION }}
        export CXX="/usr/local/opt/llvm/bin/clang++-${{ env.CLANG_VERSION }}"
        export CC="/usr/local/opt/llvm/bin/clang-${{ env.CLANG_VERSION }}"
    
    - name: Get Conan
      id: get-conan
      uses: turtlebrowser/get-conan@v1.0
    
    - name: Create default profile linux
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: | 
        conan profile new default --detect
        conan profile update settings.compiler=gcc default
        conan profile update settings.compiler.version=${{ env.GCC_VERSION }} default
        conan profile update settings.compiler.libcxx=libstdc++11 default
        
    - name: Create default profile mac
      if: ${{ matrix.os == 'macos-latest' }}
      run: | 
        conan profile new default --detect
        conan profile update settings.compiler=clang default
        conan profile update settings.compiler.version=${{ env.CLANG_VERSION }} default
        conan profile update settings.compiler.libcxx=libstdc++11 default
    
    - name: Install Dependencies
      run: conan install . -if ${{github.workspace}}/build -s build_type=${{matrix.build-type}}

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
      env:
        CC:   $CC
        CXX:  $CXX

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build-type}} -j 3

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.build-type}} --output-on-failure
      
