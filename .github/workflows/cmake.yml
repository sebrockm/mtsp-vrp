name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        build-type: [Debug, Release]
        os: [macos-latest, ubuntu-latest, windows-latest]
          
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    - name: Update GCC
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt update
        sudo apt install gcc g++
        export CXX="/usr/local/bin/g++"
        export CC="/usr/local/bin/gcc"
    
    - name: Update Clang
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew update
        brew install llvm
        export CXX="/usr/local/opt/llvm/bin/clang++"
        export CC="/usr/local/opt/llvm/bin/clang"
    
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.1
    
    - name: Create default profile
      run: conan profile new default --detect
      
    #- name: Update profile compiler
    #  run: conan profile update settings.compiler=${{matrix.compiler.c}} default
      
    #- name: Update profile compiler version
    #  run: conan profile update settings.compiler.version=${{matrix.compiler.version}} default

    - name: Update profile libstd
      run: conan profile update settings.compiler.libcxx=libstdc++11 default
    
    - name: Install Dependencies
      run: conan install . -if ${{github.workspace}}/build -s build_type=${{matrix.build-type}}

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
      #env:
      #  CC:   ${{matrix.compiler.c}}-${{matrix.compiler.version}}
      #  CXX:  ${{matrix.compiler.cpp}}-${{matrix.compiler.version}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build-type}} -j 3

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.build-type}} --output-on-failure
      
