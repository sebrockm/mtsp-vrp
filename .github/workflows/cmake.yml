name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ubuntu-build:
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
          
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.1
    
    - name: Create default profile
      run: | 
        conan profile new default --detect
        conan profile update settings.build_type=${{ matrix.build-type }} default
        conan profile update settings.compiler.libcxx=libstdc++11 default
    
    - name: Install Dependencies
      run: conan install . -if ${{ github.workspace }}/build --build=missing

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build-type }} -j 3

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ matrix.build-type }} --output-on-failure
      
  macos-build:
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
          
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    - name: Select Python 3.10
      # otherwise turtlebrowser/get-conan@v1.1 fails on macos-12
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.1
    
    - name: Create default profile
      # M1 is not supported by all dependencies
      run: | 
        conan profile new default --detect
        conan profile update settings.build_type=${{ matrix.build-type }} default
        conan profile update settings.arch=x86_64 default
        conan profile update settings.arch_build=x86_64 default
    
    - name: Install Dependencies
      run: conan install . -if ${{ github.workspace }}/build --build=missing
        
    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build-type }} -j 3

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ matrix.build-type }} --output-on-failure
      
  windows-build:
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
        msvc-version: [16]
          
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.1
    
    - name: Create default profile
      run: | 
        conan profile new default --detect
        conan profile update settings.build_type=${{ matrix.build-type }} default
        conan profile update settings.compiler.version=${{ matrix.msvc-version }} default
    
    - name: Install Dependencies
      run: conan install . -if ${{ github.workspace }}/build --build=missing

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DCONAN_DISABLE_CHECK_COMPILER=ON

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build-type }} -j 3

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ matrix.build-type }} --output-on-failure
