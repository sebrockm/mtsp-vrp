name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
        os: [macos-latest, ubuntu-latest, windows-latest]
        compiler: [{cc: gcc, cxx: g++, version: 10}, {cc: clang, cxx: clang++, version: 13}, {cc: msvc, cxx: msvc}]
        exclude:
          - os: macos-latest
            compiler: {cc: gcc}
          - os: macos-latest
            compiler: {cc: msvc}
          - os: ubuntu-latest
            compiler: {cc: clang}
          - os: ubuntu-latest
            compiler: {cc: msvc}
          - os: windows-latest
            compiler: {cc: gcc}
          - os: windows-latest
            compiler: {cc: clang}
          
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    - name: Update GCC
      id: update-gcc
      if: ${{ matrix.compiler.cc == 'gcc' }}
      uses: egor-tensin/setup-gcc@v1
      with:
        version: ${{ matrix.compiler.version }}
    
    - name: Update Clang
      if: ${{ matrix.compiler.cc == 'clang' }}
      run: |
        brew update
        brew install llvm@${{ matrix.compiler.version }}
        export CXX="/usr/local/opt/llvm/bin/clang++-${{ matrix.compiler.version }}"
        export CC="/usr/local/opt/llvm/bin/clang-${{ matrix.compiler.version }}"
    
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.1
    
    - name: Create default profile
      run: | 
        conan profile new default --detect
        conan profile update settings.compiler=${{ matrix.compiler.cc }} default
        conan profile update settings.compiler.version=193 default

    - name: Extend default profile
      if: ${{ matrix.compiler.cc != 'msvc' }}
      run: |
        conan profile update settings.compiler.version=${{ matrix.compiler.version }} default
        conan profile update settings.compiler.libcxx=libstdc++11 default
    
    - name: Install Dependencies
      run: conan install . -if ${{ github.workspace }}/build -s build_type=${{ matrix.build-type }}

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}
      env:
        CC:   ${{ matrix.compiler.cc }}-${{ matrix.compiler.version }}
        CXX:  ${{ matrix.compiler.cxx }}-${{ matrix.compiler.version }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build-type }} -j 3

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ matrix.build-type }} --output-on-failure
      
