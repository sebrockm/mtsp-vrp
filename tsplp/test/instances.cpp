#include "MtspModel.hpp"
#include "DependencyHelpers.hpp"

#include <catch2/catch.hpp>

TEST_CASE("br17.atsp", "[instances]")
{
    xt::xtensor<int, 2> weights =
    {
        {9999, 3, 5, 48, 48, 8, 8, 5, 5, 3, 3, 0, 3, 5, 8, 8, 5},
        {3, 9999, 3, 48, 48, 8, 8, 5, 5, 0, 0, 3, 0, 3, 8, 8, 5},
        {5, 3, 9999, 72, 72, 48, 48, 24, 24, 3, 3, 5, 3, 0, 48, 48, 24},
        {48,48, 74, 9999, 0, 6, 6, 12, 12, 48, 48, 48, 48, 74, 6, 6, 12},
        {48,48, 74, 0, 9999, 6, 6, 12, 12, 48, 48, 48, 48, 74, 6, 6, 12},
        {8, 8, 50, 6, 6, 9999, 0, 8, 8, 8, 8, 8, 8, 50, 0, 0, 8},
        {8, 8, 50, 6, 6, 0, 9999, 8, 8, 8, 8, 8, 8, 50, 0, 0, 8},
        {5, 5, 26, 12, 12, 8, 8, 9999, 0, 5, 5, 5, 5, 26, 8, 8, 0},
        {5, 5, 26, 12, 12, 8, 8, 0, 9999, 5, 5, 5, 5, 26, 8, 8, 0},
        {3, 0, 3, 48, 48, 8, 8, 5, 5, 9999, 0, 3, 0, 3, 8, 8, 5},
        {3, 0, 3, 48, 48, 8, 8, 5, 5, 0, 9999, 3, 0, 3, 8, 8, 5},
        {0, 3, 5, 48, 48, 8, 8, 5, 5, 3, 3, 9999, 3, 5, 8, 8, 5},
        {3, 0, 3, 48, 48, 8, 8, 5, 5, 0, 0, 3, 9999, 3, 8, 8, 5},
        {5, 3, 0, 72, 72, 48, 48, 24, 24, 3, 3, 5, 3, 9999, 48, 48, 24},
        {8, 8, 50, 6, 6, 0, 0, 8, 8, 8, 8, 8, 8, 50, 9999, 0, 8},
        {8, 8, 50, 6, 6, 0, 0, 8, 8, 8, 8, 8, 8, 50, 0, 9999, 8},
        {5, 5, 26, 12, 12, 8, 8, 0, 0, 5, 5, 5, 5, 26, 8, 8, 9999}
    };

    xt::xtensor<int, 1> startPositions{ 0 };
    xt::xtensor<int, 1> endPositions{ 0 };

    tsplp::MtspModel model{ startPositions, endPositions, weights };
    auto result = model.BranchAndCutSolve(std::chrono::seconds{ 1 });
    
    REQUIRE(result.LowerBound == Approx(39));
    REQUIRE(result.UpperBound == Approx(39));
}

TEST_CASE("br17.10.sop", "[instances]")
{
    xt::xtensor<int, 2> weights =
    {
        {  0, 3, 5, 48, 48, 8, 8, 5, 5, 3, 3, 0, 3, 5, 8, 8, 5, 1000000},
        { -1, 0, 3, 48, -1, -1, 8, 5, 5, 0, 0, 3, 0, 3, 8, -1, 5, 3},
        { -1, 3, 0, 72, -1, 48, 48, 24, 24, 3, 3, 5, 3, 0, 48, -1, 24, 5},
        { -1, 48, 74, 0, 0, 6, 6, 12, -1, 48, 48, 48, 48, 74, 6, 6, 12, 48},
        { -1, 48, 74, 0, 0, 6, 6, 12, 12, 48, 48, 48, 48, 74, 6, 6, 12, 48},
        { -1, 8, 50, 6, 6, 0, 0, 8, 8, 8, 8, 8, 8, 50, 0, 0, 8, 8},
        { -1, 8, 50, 6, 6, 0, 0, 8, 8, 8, 8, 8, 8, 50, 0, 0, 8, 8},
        { -1, 5, 26, 12, 12, -1, 8, 0, 0, 5, 5, 5, -1, 26, 8, 8, 0, 5},
        { -1, 5, 26, 12, 12, 8, 8, 0, 0, 5, 5, 5, 5, 26, 8, 8, 0, 5},
        { -1, 0, 3, 48, -1, 8, 8, 5, 5, 0, 0, 3, 0, 3, 8, 8, 5, 3},
        { -1, 0, 3, 48, 48, 8, 8, 5, 5, 0, 0, 3, 0, 3, 8, 8, 5, 3},
        { -1, 3, 5, 48, 48, 8, 8, 5, 5, 3, 3, 0, 3, 5, 8, 8, 5, 0},
        { -1, 0, 3, 48, 48, -1, 8, 5, 5, 0, 0, 3, 0, 3, 8, 8, 5, 3},
        { -1, 3, 0, 72, -1, 48, 48, 24, 24, 3, 3, 5, 3, 0, 48, 48, 24, 5},
        { -1, 8, 50, 6, 6, -1, 0, -1, 8, 8, 8, 8, -1, 50, 0, 0, 8, 8},
        { -1, 8, 50, 6, -1, 0, 0, 8, 8, 8, 8, 8, 8, 50, 0, 0, 8, 8},
        { -1, 5, 26, 12, 12, 8, 8, 0, 0, 5, 5, 5, 5, 26, 8, 8, 0, 5},
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0}
    };

    xt::xtensor<int, 1> startPositions{ 0 };
    xt::xtensor<int, 1> endPositions{ 0 };

    tsplp::MtspModel model{ startPositions, endPositions, tsplp::CreateTransitiveDependencies(weights) };
    auto result = model.BranchAndCutSolve(std::chrono::seconds{ 1 });

    REQUIRE(result.LowerBound == Approx(55));
    REQUIRE(result.UpperBound == Approx(55));
}